trigger:
  branches:
    include:
    - '*'

stages:
- stage: test
  jobs:
  - job: ubuntu
    pool:
      vmImage: "ubuntu-latest"
    strategy:
      matrix:
        Python37:
          python.version: '3.7'
        Python38:
          python.version: '3.8'
        Python39:
          python.version: '3.9'
        Python310:
          python.version: '3.10'
        PyPy3:
          python.version: 'pypy3'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'
    - template: .azure-pipelines/build-run-tests.yml

  - job: ubuntu_eastern_timezone
    pool:
      vmImage: "ubuntu-latest"
    strategy:
      matrix:
        Python38:
          python.version: '3.8'
    steps:
    - bash: sudo timedatectl set-timezone America/New_York
      displayName: Set timezone
    - bash: date
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'
    - template: .azure-pipelines/build-run-tests.yml

  - job: macos
    pool:
      vmImage: 'macOS-latest'
    strategy:
      matrix:
        Python37:
          python.version: '3.7'
        Python38:
          python.version: '3.8'
        Python39:
          python.version: '3.9'
        Python310:
          python.version: '3.10'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'
    - template: .azure-pipelines/build-run-tests.yml

  - job: windows
    pool:
      vmImage: 'windows-latest'
    strategy:
      matrix:
        Python37:
          python.version: '3.7'
        Python38:
          python.version: '3.8'
        Python39:
          python.version: '3.9'
        Python310:
          python.version: '3.10'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'
    - template: .azure-pipelines/build-run-tests.yml
      parameters:
        windows: true

- stage: build_wheels
  jobs:
  - job: manylinux_x86_64
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
          pip3 install cibuildwheel==2.3.1
        displayName: Install cibuildwheel dependencies
      - bash: cibuildwheel --output-dir wheelhouse .
        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ARCHS: x86_64
          CIBW_BUILD: "*-manylinux_*"
          CIBW_SKIP: "cp36-*"
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: 'wheelhouse'
          artifactName: wheels

  - job: musllinux_x86_64
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
          pip3 install cibuildwheel==2.3.1
        displayName: Install cibuildwheel dependencies
      - bash: cibuildwheel --output-dir wheelhouse .
        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ARCHS: x86_64
          CIBW_BUILD: "*-musllinux_*"
          CIBW_SKIP: "cp36-*"
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: 'wheelhouse'
          artifactName: wheels

  - job: manylinux_aarch64
    timeoutInMinutes: 120
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
          pip3 install cibuildwheel==2.3.1
        displayName: Install cibuildwheel dependencies
      - script: docker run --privileged --rm tonistiigi/binfmt --install all
        displayName: Register QEMU
      - bash: cibuildwheel --output-dir wheelhouse .
        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ARCHS: aarch64
          CIBW_BUILD: "*-manylinux_*"
          CIBW_SKIP: "cp36-*"
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: 'wheelhouse'
          artifactName: wheels

  - job: musllinux_aarch64
    timeoutInMinutes: 165
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
          pip3 install cibuildwheel==2.3.1
        displayName: Install cibuildwheel dependencies
      - script: docker run --privileged --rm tonistiigi/binfmt --install all
        displayName: Register QEMU
      - bash: cibuildwheel --output-dir wheelhouse .
        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ARCHS: aarch64
          CIBW_BUILD: "*-musllinux_*"
          CIBW_SKIP: "cp36-*"
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: 'wheelhouse'
          artifactName: wheels

  - job: macos
    pool:
      vmImage: 'macOS-latest'
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
          python3 -m pip install cibuildwheel==2.3.1
        displayName: Install cibuildwheel dependencies
      - bash: cibuildwheel --output-dir wheelhouse .
        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_SKIP: "cp36-*"
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: wheelhouse
          artifactName: wheels

  - job: macos_universal2
    pool:
      vmImage: 'macOS-12'
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
          python3 -m pip install cibuildwheel==2.8.0
        displayName: Install cibuildwheel dependencies
      - bash: cibuildwheel --output-dir wheelhouse .
        env:
          CMAKE_OSX_ARCHITECTURES: 'x86_64;arm64'
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ARCHS_MACOS: universal2
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: wheelhouse
          artifactName: wheels

  - job: windows_amd64
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -o errexit
          python -m pip install --upgrade pip
          pip install cibuildwheel==2.3.1
        displayName: Install cibuildwheel dependencies
      - bash: cibuildwheel --output-dir wheelhouse .
        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ARCHS: AMD64
          CIBW_SKIP: "cp36-*"
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: 'wheelhouse'
          artifactName: wheels
